# -*- coding: utf-8 -*-
"""Project_Yolo8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12e43SZW64lfzNvG7tTB5fM2LAWwzCbnn
"""

import os
HOME = os.getcwd()

# Pip install method (recommended)

!pip install ultralytics==8.0.20

from IPython import display
display.clear_output()

import ultralytics
ultralytics.checks()

from ultralytics import YOLO

from IPython.display import display, Image

# Commented out IPython magic to ensure Python compatibility.
!mkdir {HOME}/datasets
# %cd {HOME}/datasets

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="XNLDkGz83sVN1E9iitoB")
project = rf.workspace("joseph-nelson").project("mask-wearing")
dataset = project.version(19).download("yolov8")

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=train model=yolov8s.pt data=/content/datasets/Mask-Wearing-19/data.yaml epochs=50 imgsz=800 plots=True

import glob
from IPython.display import Image, display

i = 0
limit = 100 # max images to print
for imageName in glob.glob('/content/runs/detect/train2/*.png'): #assuming JPG
    if i < limit:
      display(Image(filename=imageName, width=600))
      print("\n")
    i = i + 1

import glob
from IPython.display import Image, display

i = 0
limit = 100 # max images to print
for imageName in glob.glob('/content/runs/detect/train2/*.jpg'): #assuming JPG
    if i < limit:
      display(Image(filename=imageName))
      print("\n")
    i = i + 1

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/

!yolo task=detect mode=val model=/content/runs/detect/train2/weights/best.pt data=/content/datasets/Mask-Wearing-19/data.yaml

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/
!yolo task=detect mode=predict model=/content/runs/detect/train2/weights/best.pt conf=0.25 source=/content/datasets/Mask-Wearing-19/test/images save=True

import glob
from IPython.display import Image, display

i = 0
limit = 20 # max images to print
for imageName in glob.glob('/content/runs/detect/predict3/*.jpg'): #assuming JPG
    if i < limit:
      display(Image(filename=imageName))
      print("\n")
    i = i + 1